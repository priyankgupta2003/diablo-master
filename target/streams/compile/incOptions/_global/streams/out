[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = /home/pxg9364/Diablo_2/diablo-master/target/scala-2.12/classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$IncrOpr$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Typechecker$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$IncrOpr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyLexical$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$LongLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$InfixOpr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$DoubleLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$DoubleLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$long$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$char$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$CharLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Translator$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$InfixOpr$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$term$27$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyLexical.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Typechecker.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$stmt$14$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$CharLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$LongLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$double$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Translator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$simpleType$30$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$IncrOpr$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Typechecker$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$IncrOpr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyLexical$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$LongLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$InfixOpr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$DoubleLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$DoubleLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$long$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$char$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$CharLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Translator$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$InfixOpr$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$term$27$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyLexical.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Typechecker.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$stmt$14$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$CharLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$LongLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$double$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Translator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$simpleType$30$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0mRegistering generated classes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$IncrOpr$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Typechecker$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$IncrOpr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyLexical$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$LongLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$InfixOpr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$DoubleLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$DoubleLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$long$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$char$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$CharLit$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Translator$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$InfixOpr$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$term$27$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyLexical.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Typechecker.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$stmt$14$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$CharLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyTokens$LongLit.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$double$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Translator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anonfun$$nestedInanonfun$simpleType$30$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0mRemoving the temporary directory used for backing up class files: /home/pxg9364/Diablo_2/diablo-master/target/scala-2.12/classes.bak[0m
